name: Playwright Tests
on:
    schedule:
        # Playwright tests are running automatically in Firefox on each Monday & in Chrome on each Friday.
        - cron: '0 5 * * 1,5'
    workflow_dispatch:
        inputs:
            Browsers:
                description: Browsers
                required: true
                default: firefox
                type: choice
                options:
                    - firefox
                    - chrome

env:
    TEST_ACCOUNT_12: ${{secrets.AUTOMATION_TEST_ACCOUNT_12}}
    TEST_ACCOUNT_13: ${{secrets.AUTOMATION_TEST_ACCOUNT_13}}
    TEST_ACCOUNT_MESSAGE_1: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_1}}
    TEST_ACCOUNT_MESSAGE_2: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_2}}
    TEST_ACCOUNT_MESSAGE_3: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_3}}
    TEST_ACCOUNT_MESSAGE_4: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_4}}
    TEST_ACCOUNT_MESSAGE_5: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_5}}
    TEST_ACCOUNT_MESSAGE_6: ${{secrets.AUTOMATION_TEST_ACCOUNT_MESSAGE_6}}
    TEST_ACCOUNT_SPECIAL_CHARS: ${{secrets.AUTOMATION_TEST_ACCOUNT_SPECIAL_CHARS}}
    TEST_ACCOUNTS_PS: ${{secrets.AUTOMATION_ACCOUNTS_PASSWORD}}
    TEST_ACCOUNT_MODERATOR: ${{secrets.AUTOMATION_MODERATOR_ACCOUNT}}
    BROWSER: ${{secrets.BROWSER}}


jobs:
  playwright_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        if: success() || failure()
        run: |
          sudo apt-get update
          pip3 install --user poetry
          poetry install
      - name: Ensure Playwright browsers are installed
        run: |
            pip3 install playwright
            python -m playwright install
      - name: Set up browsers env
        if: "github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'"
        run: |
            if [ "${{ github.event_name }}" == 'schedule' ]; then
                current_day=$(date +\%u)
                if [ $current_day -eq 1 ]; then
                    echo "BROWSER=firefox" >> $GITHUB_ENV
                elif [ $current_day -eq 5 ]; then
                    echo "BROWSER=chrome" >> $GITHUB_ENV
                fi
            elif [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
                echo "BROWSER=${{inputs.Browsers}}" >> $GITHUB_ENV
            fi
      - name: Creating User Sessions for ${{ env.BROWSER }}
        id: create-sessions
        working-directory: playwright_tests
        run: |
         poetry run pytest -m loginSessions --browser ${{ env.BROWSER }} --reruns 1
      - name: Run Playwright Tests
        working-directory: playwright_tests
        if: success() || failure() && steps.create-sessions.outcome == 'success'
        run: |
            declare -a tests=("homePageTests" "topNavbarTests" "footerSectionTests" "contributePagesTests" "messagingSystem" "userContributionTests" "userProfile" "userSettings" "editUserProfileTests" "userQuestions" "contactSupportPage" "productSolutionsPage" "productTopicsPage" "aaqPage" "postedQuestions" "kbProductsPage" "kbArticleCreationAndAccess" "beforeThreadTests" "articleThreads" "afterThreadTests" "kbArticleShowHistory" "recentRevisionsDashboard" "kbDashboard")
            any_failures=false
            for test in "${tests[@]}"; do
                num_processes=2
                if [[ "$test" =~ ^(beforeThreadTests|afterThreadTests)$ ]]; then
                  num_processes=1
                fi
                if ! poetry run pytest -m $test --numprocesses $num_processes --browser ${{ env.BROWSER }} --reruns 1; then
                 any_failures=true
                fi
            done
            echo "TESTS_FAILED=$any_failures" >> $GITHUB_ENV
      - name: Generating Allure Report
        working-directory: playwright_tests
        if: success() || failure()
        run: |
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
            brew install allure
            allure generate --single-file reports/allure_reports
      - name: Upload the combined test report as artifact
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: Playwright test report
          path: |
            playwright_tests/allure-report
      - name: Playwright Test Status
        if: env.TESTS_FAILED == 'true'
        run: exit 1
